# pylint: disable=line-too-long, redefined-builtin, too-many-arguments, too-many-locals, unused-argument, unused-import, too-many-ancestors  # noqa: E501
"""
Autogenerated file
DO NOT EDIT.
"""
import typing

from dash_component_system import (
    DashComponent, UNDEFINED, Undefined, ComponentProp
)


class Upload(DashComponent):

    _namespace = 'dash_core_components'
    _typename = 'Upload'
    available_wildcard_properties = [

    ]
    id = ComponentProp('id', UNDEFINED, False)
    contents = ComponentProp('contents', UNDEFINED, False)
    filename = ComponentProp('filename', UNDEFINED, False)
    last_modified = ComponentProp('last_modified', UNDEFINED, False)
    children = ComponentProp('children', UNDEFINED, False)
    accept = ComponentProp('accept', UNDEFINED, False)
    disabled = ComponentProp('disabled', False, False)
    disable_click = ComponentProp('disable_click', False, False)
    max_size = ComponentProp('max_size', -1, False)
    min_size = ComponentProp('min_size', 0, False)
    multiple = ComponentProp('multiple', False, False)
    className = ComponentProp('className', UNDEFINED, False)
    className_active = ComponentProp('className_active', UNDEFINED, False)
    className_reject = ComponentProp('className_reject', UNDEFINED, False)
    className_disabled = ComponentProp('className_disabled', UNDEFINED, False)
    style = ComponentProp('style', UNDEFINED, False)
    style_active = ComponentProp('style_active', UNDEFINED, False)
    style_reject = ComponentProp('style_reject', UNDEFINED, False)
    style_disabled = ComponentProp('style_disabled', UNDEFINED, False)
    loading_state = ComponentProp('loading_state', UNDEFINED, False)

    def __init__(
            self,
            children=UNDEFINED,
            id=UNDEFINED,
            contents=UNDEFINED,
            filename=UNDEFINED,
            last_modified=UNDEFINED,
            accept=UNDEFINED,
            disabled=False,
            disable_click=False,
            max_size=-1,
            min_size=0,
            multiple=False,
            className=UNDEFINED,
            className_active=UNDEFINED,
            className_reject=UNDEFINED,
            className_disabled=UNDEFINED,
            style=UNDEFINED,
            style_active=UNDEFINED,
            style_reject=UNDEFINED,
            style_disabled=UNDEFINED,
            loading_state=UNDEFINED,
    ):
        # type: (typing.Union[typing.Union[typing.Union[str, int, float, DashComponent,typing.List[typing.Union[str, int, float, DashComponent]]],str], Undefined], typing.Union[str, Undefined], typing.Union[typing.Union[str,typing.List[str]], Undefined], typing.Union[typing.Union[str,typing.List[str]], Undefined], typing.Union[typing.Union[typing.Union[float, int],typing.List[typing.Union[float, int]]], Undefined], typing.Union[str, Undefined], typing.Union[bool, Undefined], typing.Union[bool, Undefined], typing.Union[typing.Union[float, int], Undefined], typing.Union[typing.Union[float, int], Undefined], typing.Union[bool, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[typing.Dict, Undefined], typing.Union[typing.Dict, Undefined], typing.Union[typing.Dict, Undefined], typing.Union[typing.Dict, Undefined], typing.Union[typing.Dict[str, typing.Union[bool, str]], Undefined]) -> None # noqa: E501
        """
        :param id: ID of the component. Used to identify component in Dash
            callback functions.
        :param contents: The contents of the uploaded file as a binary
            string
        :param filename: The name of the file(s) that was(were) uploaded.
            Note that this does not include the path of the
            file (for security reasons).
        :param last_modified: The last modified date of the file that was
            uploaded in unix time (seconds since 1970).
        :param children: Contents of the upload component
        :param accept: Allow specific types of files. See
            https://github.com/okonet/attr-accept for more
            information. Keep in mind that mime type
            determination is not reliable across platforms. CSV
            files, for example, are reported as text/plain under
            macOS but as application/vnd.ms-excel under Windows.
            In some cases there might not be a mime type set at
            all. See: https://github.com/react-dropzone/react-
            dropzone/issues/276
        :param disabled: Enable/disable the upload component
            entirely(default=false)
        :param disable_click: Disallow clicking on the component to open
            the file dialog(default=false)
        :param max_size: Maximum file size. If `-1`, then
            infinite(default=-1)
        :param min_size: Minimum file size(default=0)
        :param multiple: Allow dropping multiple files(default=false)
        :param className: HTML class name of the component
        :param className_active: HTML class name of the component while
            active
        :param className_reject: HTML class name of the component if
            rejected
        :param className_disabled: HTML class name of the component if
            disabled
        :param style: CSS styles to apply(default={})
        :param style_active: CSS styles to apply while active(default={
            borderStyle: 'solid',     borderColor: '#6c6',
            backgroundColor: '#eee', })
        :param style_reject: CSS styles if rejected(default={
            borderStyle: 'solid',     borderColor: '#c66',
            backgroundColor: '#eee', })
        :param style_disabled: CSS styles if disabled(default={
            opacity: 0.5, })
        :param loading_state: Object that holds the loading state object
            coming from dash-renderer
        """
        DashComponent.__init__(self, locals())
